{
  "pullReviews": [
    {
      "pull": {
        "id": 6230,
        "html_url": "https://github.com/jina-ai/serve/pull/6230",
        "title": "fix: direct docs usage in client",
        "body": "Goals:\n\n\n\nresolves #ISSUE-NUMBER\n\n\n...\n\n\n...\n\n\n...\n\n\n...\n\n\n check and update documentation. See guide and ask the team.",
        "is_merged": false,
        "diff": "diff --git a/jina/clients/request/helper.py b/jina/clients/request/helper.py\nindex 9976c470216fe..7b6c9f68125c5 100644\n--- a/jina/clients/request/helper.py\n+++ b/jina/clients/request/helper.py\n@@ -90,4 +90,5 @@ def _add_docs(req: DataRequest, batch, data_type: DataInputType) -> None:\n         d, data_type = _new_doc_from_data(content, data_type)\n         da.append(d)\n     req.document_array_cls = da.__class__\n-    req.data.docs = da\n+    req.direct_docs = da\n+    #req.data.docs = da\n"
      },
      "summary": "**Сводка по Merge Request**\n\nДанный MR исправляет использование атрибута `direct_docs` в клиентском коде, заменяя присваивание `req.data.docs` на `req.direct_docs` в файле `jina/clients/request/helper.py`. Изменение оценено как имеющее низкую сложность (\"Low\"). Стиль кода признан хорошим (8/10), соответствующим стандартам, однако содержит рекомендацию удалить закомментированную строку старого кода. С точки зрения паттернов проектирования и анти-паттернов, изменения оценены высоко (10/10 и 9/10 соответственно), не вводящих проблем, но также отмечается наличие избыточной закомментированной строки.",
      "antiPatterns": {
        "detailed_analysis": "Изменение заключается в переназначении переменной `da` с `req.data.docs` на `req.direct_docs`. Это простое рефакторинговое изменение, которое само по себе не является анти-паттерном и не вводит новых проблем согласно предоставленному описанию метрики. Однако, в коде осталась закомментированная строка `#req.data.docs = da`, которая дублирует удаленную строку и является избыточной. Хотя это очень незначительный недостаток (можно рассматривать как минимальный случай \"мертвого кода\" или остаточного артефакта рефакторинга), он немного засоряет код. Серьезные анти-паттерны отсутствуют. Оценка 9 отражает почти идеальное состояние с точки зрения анти-паттернов, с учетом этого мелкого замечания.",
        "recommendations": [
          "Удалить закомментированную строку `#req.data.docs = da`, так как она избыточна после внесенных изменений."
        ],
        "confidence": "High",
        "score": 9,
        "summary": "Изменения не вводят анти-паттернов, но оставляют закомментированную строку, которую рекомендуется удалить."
      },
      "complexity": {
        "justification": "Уровень сложности \"Low\" присвоен на основе следующих факторов:\n\n1.  **Объем изменений:** Очень мал. Изменен только один файл (`jina/clients/request/helper.py`) и фактически только одна строка кода (атрибут `req.data.docs` заменен на `req.direct_docs`).\n2.  **Характер изменений:** Исправление ошибки или незначительное изменение в обработке запроса. Название MR (\"fix: direct docs usage in client\") указывает на исправление.\n3.  **Влияние на систему:** Изменение очень локализовано в одной вспомогательной функции и касается только способа присвоения документов объекту запроса. Влияние на другие части системы маловероятно или минимально.\n4.  **Когнитивная нагрузка:** Очень низкая. Изменение тривиально для понимания – простая замена имени атрибута.\n5.  **Зависимости:** Новые зависимости не добавлены, существующие контракты не изменены.\n6.  **Риски:** Минимальные. Риск внесения регрессий крайне низок из-за простоты и локализованности изменения.\n\nВ совокупности, эти характеристики полностью соответствуют определению \"Low\" сложности: простое, локализованное изменение с минимальными рисками и низкой когнитивной нагрузкой.",
        "classification": "Low"
      },
      "designPatterns": {
        "detailed_analysis": "Анализ изменений в файле `jina/clients/request/helper.py` показывает замену присваивания атрибута `req.data.docs` на `req.direct_docs`. Сам по себе этот рефакторинг не вводит никаких известных анти-паттернов, таких как 'God Class', 'Spaghetti Code' или дублирование кода. Закомментированная строка `#req.data.docs = da` является незначительной и, вероятно, временной в контексте MR, не представляя собой серьезного анти-паттерна 'Lava Flow'. Таким образом, код в рамках данного MR соответствует оценке 'Отлично' по метрике анти-паттернов.",
        "recommendations": [],
        "confidence": "High",
        "score": 10,
        "summary": "Изменения не вносят анти-паттернов. Код чистый и соответствует лучшим практикам."
      },
      "codeStyle": {
        "detailed_analysis": "Анализ изменений показывает хорошее следование стандартам стиля кода. **Форматирование:** Отступы (4 пробела), пробелы вокруг оператора присваивания (`=`) и длина строк соответствуют нормам. **Именование:** Новое имя атрибута `direct_docs` использует `snake_case`, что согласуется с PEP 8 и стилем проекта. Имя выглядит понятным в контексте. **Консистентность:** Примененный стиль форматирования и именования единообразен в рамках изменений и соответствует окружающему коду. **Читаемость:** Код легко читается. Замена одного присваивания другим ясна. Наличие закомментированной строки `#req.data.docs = da` может временно помочь понять изменение, но её следует удалить для чистоты кода. **Соответствие гайдлайнам:** Изменения соответствуют основным положениям PEP 8. Оценка 8 (\"Хорошо\") обусловлена общим высоким качеством стиля с одним незначительным моментом (закомментированный код), который легко исправить.",
        "recommendations": [
          "Рекомендуется удалить закомментированную строку `#req.data.docs = da` перед слиянием ветки."
        ],
        "confidence": "High",
        "score": 8,
        "summary": "Стиль кода в изменениях хороший, соответствует стандартам, но присутствует закомментированная строка старого кода."
      }
    },
    {
      "pull": {
        "id": 6223,
        "html_url": "https://github.com/jina-ai/serve/pull/6223",
        "title": "ci: test uvicorn non standard install",
        "body": "Goals:\n\n\n\nresolves #ISSUE-NUMBER\n\n\n...\n\n\n...\n\n\n...\n\n\n...\n\n\n check and update documentation. See guide and ask the team.",
        "is_merged": true,
        "diff": "diff --git a/extra-requirements.txt b/extra-requirements.txt\nindex 9df83c9a8310b..f5e4432c67bb5 100644\n--- a/extra-requirements.txt\n+++ b/extra-requirements.txt\n@@ -46,7 +46,7 @@ opentelemetry-instrumentation-aiohttp-client>=0.33b0:    perf,standard,devel\n opentelemetry-instrumentation-fastapi>=0.33b0: perf,standard,devel\n opentelemetry-exporter-otlp-proto-grpc>=1.13.0: perf,standrad,devel\n fastapi>=0.76.0:            standard,devel\n-uvicorn[standard]<=0.23.1:  standard,devel\n+uvicorn<=0.23.1:            standard,devel\n docker:                     standard,devel\n pathspec:                   standard,devel\n filelock:                   standard,devel\n"
      },
      "summary": "**Сводка по Merge Request**\n\nДанный MR предназначен для тестирования установки пакета `uvicorn` без стандартных дополнительных компонентов (`[standard]`), вероятно, в среде CI. Ключевое изменение — удаление спецификатора `[standard]` у зависимости `uvicorn` в файле `extra-requirements.txt`, а также корректировка выравнивания для улучшения читаемости. Экспертная оценка определяет сложность изменения как **Низкую**. **Стиль кода** оценен высоко (9/10) благодаря улучшенному форматированию и следованию лучшим практикам. Изменение не затрагивает **паттерны проектирования** и не вводит **анти-паттерны** (оценки 10/10).",
      "antiPatterns": {
        "detailed_analysis": "Анализ изменений в файле `extra-requirements.txt` показывает только модификацию спецификации зависимости для пакета `uvicorn` (удаление `[standard]`). Этот тип изменений не относится к анти-паттернам проектирования или программирования, описанным в метрике (таким как God Class, Spaghetti Code, Copy-Paste и т.д.). Код остается чистым с точки зрения этой метрики. Поэтому присваивается наивысший балл.",
        "recommendations": [],
        "confidence": "High",
        "score": 10,
        "summary": "Изменения в файле зависимостей не вводят никаких анти-паттернов."
      },
      "complexity": {
        "justification": "Оценка сложности: Низкая.\n\nОбоснование:\n1.  **Объем изменений:** Очень низкий. Изменен всего один файл (`extra-requirements.txt`), и в нем модифицирована одна строка.\n2.  **Характер изменений:** Это изменение конфигурации управления зависимостями. Конкретно, удалена спецификация `[standard]` при указании версии пакета `uvicorn`. Судя по названию MR (\"ci: test uvicorn non standard install\"), это сделано для проверки установки `uvicorn` без стандартных дополнительных компонентов в рамках CI.\n3.  **Влияние на систему:** Минимальное. Изменение влияет только на процесс установки одной зависимости, вероятно, только в среде непрерывной интеграции (CI). Оно не затрагивает основную логику приложения, API, структуру данных или пользовательский интерфейс.\n4.  **Когнитивная нагрузка:** Очень низкая. Понять суть изменения (удаление `[standard]`) не требует усилий или глубоких знаний системы.\n5.  **Зависимости:** Изменяется способ декларирования зависимости, но не вводятся новые и не изменяются существующие программные интерфейсы.\n6.  **Риски:** Низкие. Существует небольшой риск, что CI-пайплайн может завершиться ошибкой, если установка без `[standard]` неработоспособна или не содержит необходимых для тестов компонентов. Однако риск внесения регрессий в основное приложение крайне мал.\n\n**Вывод:** Данное изменение полностью соответствует критериям **Низкой** сложности согласно предоставленному определению метрики. Это простое, локализованное изменение конфигурации с минимальными рисками и когнитивной нагрузкой.",
        "classification": "Low"
      },
      "designPatterns": {
        "detailed_analysis": "Анализ изменений в файле `extra-requirements.txt` показывает, что была изменена только спецификация зависимости для пакета `uvicorn` (удалено `[standard]`). Это изменение касается управления зависимостями и конфигурации сборки, а не логики или структуры кода приложения. В соответствии с описанием метрики `anti_patterns`, данное изменение не вводит никаких известных анти-паттернов программирования или проектирования (таких как God Class, Spaghetti Code, Copy-Paste, N+1 запросы и т.д.). Код в рамках этого MR чист с точки зрения анти-паттернов. Поэтому присваивается наивысший балл.",
        "recommendations": [],
        "confidence": "High",
        "score": 10,
        "summary": "Изменения в файле зависимостей не вводят и не затрагивают анти-паттерны."
      },
      "codeStyle": {
        "detailed_analysis": "Изменение в файле `extra-requirements.txt` касается одной строки зависимости `uvicorn`. Удаление `[standard]` является функциональным изменением. С точки зрения стиля, было добавлено дополнительное пространство для выравнивания маркеров `standard,devel` с другими строками в файле (предположительно). Такое выравнивание является хорошей практикой для файлов зависимостей, так как улучшает читаемость (Readability) и консистентность (Consistency) форматирования. Именование (Naming - названия пакетов) стандартное. Форматирование (Formatting) соответствует общепринятым практикам для таких файлов. Отсутствие полного файла не позволяет на 100% подтвердить консистентность выравнивания во всем файле, но само изменение её улучшает. Соответствие гайдлайнам (Styleguide Adherence) - для файлов requirements нет строгих гайдлайнов, но выравнивание считается хорошей практикой. Общий стиль изменения соответствует высокому уровню. Оценка 9 отражает чистоту и следование лучшим практикам форматирования для данного типа файла.",
        "recommendations": [],
        "confidence": "Medium",
        "score": 9,
        "summary": "Изменение в файле зависимостей улучшает выравнивание и соответствует общепринятым практикам форматирования."
      }
    },
    {
      "pull": {
        "id": 6222,
        "html_url": "https://github.com/jina-ai/serve/pull/6222",
        "title": "ci: pdate force-release.yml",
        "body": "Goals:\n\n\n\nresolves #ISSUE-NUMBER\n\n\n...\n\n\n...\n\n\n...\n\n\n...\n\n\n check and update documentation. See guide and ask the team.",
        "is_merged": true,
        "diff": "diff --git a/.github/workflows/force-release.yml b/.github/workflows/force-release.yml\nindex bf44188975c1d..b9aeb324c3b1d 100644\n--- a/.github/workflows/force-release.yml\n+++ b/.github/workflows/force-release.yml\n@@ -154,7 +154,7 @@ jobs:\n #          submodules: true\n       - uses: actions/setup-python@v4\n         with:\n-          python-version: 3.7\n+          python-version: \"3.10\"\n         # https://github.com/actions/checkout#fetch-all-tags\n       - uses: actions/download-artifact@v3\n         with:\n"
      },
      "summary": "Данный MR обновляет версию Python с 3.7 до \"3.10\" в CI/CD workflow `force-release` (`.github/workflows/force-release.yml`). Это изменение конфигурации оценено как имеющее низкую сложность (Low). Стиль кода соответствует стандартам YAML (оценка 9/10), хотя отмечено добавление кавычек к номеру версии. Анти-паттерны и проблемы с дизайном отсутствуют (оценка 10/10), так как изменение затрагивает только конфигурацию CI.",
      "antiPatterns": {
        "detailed_analysis": "Модификация заключается в обновлении версии Python с 3.7 до 3.10 в файле рабочего процесса GitHub Actions (`force-release.yml`). Это стандартная задача поддержки, соответствующая лучшим практикам использования поддерживаемой и более современной версии языка. В данном изменении не обнаружено никаких анти-паттернов проектирования или программирования, описанных в метрике.",
        "recommendations": [],
        "confidence": "High",
        "score": 10,
        "summary": "Изменение обновляет версию Python в CI/CD пайплайне, что является хорошей практикой и не вносит анти-паттернов."
      },
      "complexity": {
        "justification": "Оценка сложности: Low.\n\nОбоснование:\n1.  **Объем изменений:** Изменен только один файл конфигурации CI/CD (`.github/workflows/force-release.yml`), добавлена одна строка и удалена одна строка. Объем изменений минимален.\n2.  **Характер изменений:** Произведено обновление версии Python (с 3.7 на \"3.10\") в рабочем процессе GitHub Actions. Это простое изменение конфигурации, относящееся к обслуживанию CI/CD.\n3.  **Влияние на систему:** Изменение влияет исключительно на среду выполнения одного задания в CI/CD пайплайне (`force-release.yml`). Оно не затрагивает основной код приложения, API, базу данных или пользовательский интерфейс. Влияние строго локализовано.\n4.  **Когнитивная нагрузка:** Очень низкая. Изменение легко понять, так как это простое обновление номера версии в стандартном действии `actions/setup-python`. Не требуется глубокое понимание системы или сложных концепций.\n5.  **Зависимости:** Новые зависимости не добавляются. Изменяется только версия среды выполнения Python для CI.\n6.  **Риски:** Низкие. Основной риск заключается в возможной несовместимости инструментов CI с новой версией Python, что маловероятно и легко проверяется при запуске CI. Риск регрессии для основного приложения отсутствует.\n\nВывод: Данное изменение полностью соответствует критериям низкой сложности (Low) согласно предоставленному определению: оно простое, локализованное, легко понятное и несет минимальные риски.",
        "classification": "Low"
      },
      "designPatterns": {
        "detailed_analysis": "Анализируемый diff изменяет версию Python, используемую в рабочем процессе GitHub Actions, с 3.7 на 3.10. Это изменение является обновлением конфигурации и не затрагивает логику приложения или структуру кода, где обычно проявляются анти-паттерны (такие как God Class, Spaghetti Code, нарушение SRP и т.д.). Обновление версии зависимости является стандартной практикой поддержки. В рамках данного изменения анти-паттерны не обнаружены, что соответствует оценке 10.",
        "recommendations": [],
        "confidence": "High",
        "score": 10,
        "summary": "Изменения в файле конфигурации рабочего процесса GitHub Actions не вводят анти-паттернов."
      },
      "codeStyle": {
        "detailed_analysis": "Анализ стиля кода для изменения в файле `.github/workflows/force-release.yml`:\n*   **Форматирование:** Изменение касается одной строки в YAML файле. Отступ (`python-version: \"3.10\"`) корректен относительно блока `with:`. Пробелы вокруг двоеточия стандартны для YAML. Длина строки в норме. Добавление кавычек к значению `\"3.10\"` (в отличие от `3.7` без кавычек) является допустимым и часто рекомендуемым стилем в YAML для избежания неоднозначности, хотя и вносит минимальную непоследовательность с предыдущей версией этой строки. В целом форматирование соответствует стандартам YAML.\n*   **Именование:** Изменение затрагивает только значение существующего ключа (`python-version`), определенного внешним действием (`actions/setup-python`). Новые имена не вводятся. Значение `\"3.10\"` ясно обозначает версию Python.\n*   **Консистентность:** Стиль (синтаксис YAML, отступы) соответствует окружающему коду, показанному в diff. Небольшая непоследовательность в использовании кавычек для версии Python (`\"3.10\"` против `3.7`) не является критичной, так как использование кавычек часто считается лучшей практикой.\n*   **Читаемость:** Изменение чрезвычайно простое и легко читаемое. Смысл ясен: обновление версии Python. Значение `\"3.10\"` не является \"магическим\", его семантика очевидна в контексте ключа `python-version`. Комментарии не требуются.\n*   **Соответствие гайдлайнам:** Код соответствует общепринятым практикам форматирования YAML и структуре GitHub Actions workflows. Использование кавычек для строковых значений, которые могут быть интерпретированы иначе (как число `3.1`), соответствует рекомендациям многих YAML стайлгайдов.\n\n**Обоснование Оценки:** Изменение минимально и не вносит стилистических ошибок. Форматирование корректно, читаемость отличная. Небольшое изменение в использовании кавычек является скорее улучшением или допустимым стилистическим выбором, чем недостатком. Код соответствует стандартам и не требует исправлений стиля. Оценка 9 отражает высокое качество стиля с учетом минимального характера изменения.",
        "recommendations": [],
        "confidence": "High",
        "score": 9,
        "summary": "Изменение стиля кода минимально и соответствует стандартам. Обновлена версия Python с добавлением кавычек, что является хорошей практикой в YAML."
      }
    }
  ],
  "summary": "",
  "totalScore": 9.436666666666667,
  "totalSummary": {
    "object": {
      "overall_assessment": "Инженер демонстрирует высокое качество кода при выполнении задач с низкой сложностью, в основном связанных с небольшим рефакторингом, обновлением зависимостей и конфигурацией CI/CD. Код соответствует стандартам стиля (PEP 8, YAML) и лучшим практикам, не содержит анти-паттернов или проблем с дизайном. Общая оценка качества работы положительная, с минимальными рекомендациями по улучшению.",
      "positives": [
        "Высокое качество кода и следование лучшим практикам.",
        "Отсутствие анти-паттернов и проблем с дизайном в коде.",
        "Хорошее соблюдение стандартов стиля кода (PEP 8, YAML), включая форматирование и именование.",
        "Успешное выполнение задач низкой сложности."
      ],
      "areas_for_improvement": [
        "Незначительные случаи оставления избыточного (закомментированного) кода после рефакторинга.",
        "Внимание к чистоте кода перед слиянием веток для удаления артефактов разработки (например, закомментированных строк)."
      ]
    },
    "finishReason": "tool-calls",
    "usage": {
      "promptTokens": 1239,
      "completionTokens": 227,
      "totalTokens": 1466
    },
    "warnings": [],
    "response": {
      "id": "gen-1744888509-ILPChN1PwLDnO989teG4",
      "timestamp": "2025-04-17T11:15:20.903Z",
      "modelId": "google/gemini-2.5-pro-preview-03-25",
      "headers": {
        "access-control-allow-origin": "*",
        "cf-ray": "931b80c1fd56eb4c-CPH",
        "connection": "keep-alive",
        "content-encoding": "br",
        "content-type": "application/json",
        "date": "Thu, 17 Apr 2025 11:15:09 GMT",
        "server": "cloudflare",
        "transfer-encoding": "chunked",
        "vary": "Accept-Encoding",
        "x-clerk-auth-message": "Invalid JWT form. A JWT consists of three parts separated by dots. (reason=token-invalid, token-carrier=header)",
        "x-clerk-auth-reason": "token-invalid",
        "x-clerk-auth-status": "signed-out"
      }
    },
    "request": {}
  },
  "metricSummary": {
    "object": {
      "metricsSummary": {
        "complexity": {
          "classification": "Low",
          "justification": "Суммарный анализ сложности всех рассмотренных Merge Requests показывает стабильно низкий уровень (Low). Это обосновано малым объемом изменений в каждом MR (часто затрагивался один файл и несколько строк), характером изменений (простой рефакторинг, обновление зависимостей, конфигурация CI/CD), их локализованным влиянием на систему, очень низкой когнитивной нагрузкой для понимания и минимальными рисками внесения регрессий."
        },
        "antiPatterns": {
          "confidence": "High",
          "detailed_analysis": "Анализ рассмотренных изменений показывает, что они в основном касались рефакторинга (замена атрибута), обновления зависимостей и конфигурации CI/CD. В целом, изменения не вводили серьезных анти-паттернов проектирования или программирования. Код оценивается как чистый с этой точки зрения. Единственным отмеченным недостатком было наличие избыточной закомментированной строки в одном из MR, что можно рассматривать как незначительный артефакт рефакторинга или минимальный случай 'мертвого кода'.",
          "summary": "Изменения в целом не вводят анти-паттернов, код соответствует лучшим практикам. Выявлен один незначительный случай избыточного закомментированного кода.",
          "recommendations": [
            "Удалить закомментированную строку `#req.data.docs = da`, так как она избыточна после внесенных изменений."
          ],
          "score": 9.67
        },
        "codeStyle": {
          "confidence": "High",
          "detailed_analysis": "Стиль кода в проанализированных изменениях в целом оценивается как высокий. Отмечено хорошее следование стандартам форматирования (отступы, пробелы), именования (snake_case) и общим принципам читаемости как для Python (PEP 8), так и для файлов конфигурации (YAML, requirements.txt). В одном случае было отмечено улучшение читаемости файла зависимостей за счет выравнивания. Также отмечено использование кавычек для версии в YAML как хорошая практика. Единственное замечание касалось наличия закомментированной строки старого кода в одном из MR, которую рекомендовано удалить для чистоты.",
          "summary": "Стиль кода соответствует стандартам и лучшим практикам (PEP 8, YAML). Отмечены улучшения форматирования и хорошее именование. Присутствует одно замечание по закомментированному коду.",
          "recommendations": [
            "Рекомендуется удалить закомментированную строку `#req.data.docs = da` перед слиянием ветки."
          ],
          "score": 8.64
        },
        "designPatterns": {
          "confidence": "High",
          "detailed_analysis": "Анализ изменений с точки зрения паттернов проектирования показал, что внесенные модификации (простой рефакторинг, обновление зависимостей и конфигурации CI) не затрагивали и не нарушали каких-либо известных паттернов проектирования. Изменения были локализованы и не вносили структурных проблем или анти-паттернов, связанных с дизайном системы. Код в рамках данных MR соответствует лучшим практикам.",
          "summary": "Изменения не затрагивают и не вводят проблем, связанных с паттернами проектирования. Код чистый и соответствует лучшим практикам.",
          "recommendations": [],
          "score": 10
        }
      },
      "totalSummary": "Общий анализ Merge Requests показывает, что сотрудник выполняет задачи с низкой сложностью, в основном связанные с небольшим рефакторингом, обновлением зависимостей или конфигурацией CI/CD. Качество кода высокое: стиль соответствует стандартам, анти-паттерны и проблемы с дизайном отсутствуют, за исключением одного незначительного случая с закомментированным кодом. Рекомендации минимальны и касаются удаления этого избыточного кода."
    },
    "finishReason": "tool-calls",
    "usage": {
      "promptTokens": 4981,
      "completionTokens": 794,
      "totalTokens": 5775
    },
    "warnings": [],
    "response": {
      "id": "gen-1744888490-rzEjDvJitEOyOm8W7E08",
      "timestamp": "2025-04-17T11:15:09.647Z",
      "modelId": "google/gemini-2.5-pro-preview-03-25",
      "headers": {
        "access-control-allow-origin": "*",
        "cf-ray": "931b8049df7beb4c-CPH",
        "connection": "keep-alive",
        "content-encoding": "br",
        "content-type": "application/json",
        "date": "Thu, 17 Apr 2025 11:14:50 GMT",
        "server": "cloudflare",
        "transfer-encoding": "chunked",
        "vary": "Accept-Encoding",
        "x-clerk-auth-message": "Invalid JWT form. A JWT consists of three parts separated by dots. (reason=token-invalid, token-carrier=header)",
        "x-clerk-auth-reason": "token-invalid",
        "x-clerk-auth-status": "signed-out"
      }
    },
    "request": {}
  }
}
